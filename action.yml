name: 'Run tests using TAFFi'
description: 'Sets up needed TAFFi configs and runs the tests using TAFFi'
inputs:
  testDir:
    description: Path to a directory below which all the files needed for test run are found from. Path is relative to workspace directory
    default: ''
    required: false
    type: string
  resultsDir:
    description: Path to a directory where all the test results will be stored. Path is relative to workspace directory
    default: 'output'
    required: false
    type: string
  taffiCmd:
    description: Command to run before starting TAFFi server. Can be used for example installing some additional libraries etc.
    required: false
    type: string
  testRunTool:
    description: Test tool to run
    default: robot
    required: false
    type: string
  testRunBaseDir:
    description: Path to the base directory where all tests to run are found. Must be relative to testDir input.
    default: robot/tests
    required: false
    type: string
  testRunConfigPath:
    description: Path to the test configuration file (tool specific file, for Robot it is an argument file in JSON format). Must be relative to testDir input.
    default: robot/tests/robot.arguments.json
    required: false
    type: string
  testRunTests:
    description: Tests to run. Quotes (") need to be escaped with a backslash (\).
    default: .
    required: false
    type: string
  testRunOptions:
    description: Commandline options to be given for test tool. Quotes (") need to be escaped with a backslash (\).
    required: false
    type: string
  dockerRegistryUsername:
    description: Username to be used to access the Docker registry in Telia Company JFrog Artifactory (verso-docker-dev-local.jfrog.teliacompany.io) for downloading the TAFFi Docker images
    required: true
    type: string
  dockerRegistryPassword:
    description: Password to be used to access the Docker registry in Telia Company JFrog Artifactory (verso-docker-dev-local.jfrog.teliacompany.io) for downloading the TAFFi Docker images
    required: true
    type: string
  jiraProject:
    description: Jira project to which report the results
    required: false
    type: string
  jiraTestPlan:
    description: Jira test plan to which report the results
    required: false
    type: string
  jiraUsername:
    description: Username to be used to access Jira (https://devopsjira.verso.sonera.fi) for reporting test results. Required only if also both jiraProject and jiraTestPlan are provided, and thus test reporting is tried to be done.
    required: false
    type: string
  jiraPassword:
    description: Password to be used to access Jira (https://devopsjira.verso.sonera.fi) for reporting test results. Required only if also both jiraProject and jiraTestPlan are provided, and thus test reporting is tried to be done.
    required: false
    type: string
  realRun:
    description: Really run tests?
    default: true
    type: boolean

runs:
  using: composite
  steps:
    - name: Set environment variables
      shell: bash
      run: |
        echo "TAFFI_CONFIGS=${GITHUB_WORKSPACE}/taffi_config" >> $GITHUB_ENV
        echo "no_proxy=${no_proxy},.telia.net,.taffinet" >> $GITHUB_ENV
        echo "NO_PROXY=${NO_PROXY},.telia.net,.taffinet" >> $GITHUB_ENV

    - name: Prepare TAFFi config files
      shell: bash
      run: |
        mkdir -p ${{env.TAFFI_CONFIGS}}
        cp ${{ github.action_path }}/configs/* ${{env.TAFFI_CONFIGS}}

    - name: Login to verso-docker-dev-local Docker registry in Common Artifactory
      uses: docker/login-action@v2
      with:
        registry: verso-docker-dev-local.jfrog.teliacompany.io
        username: '${{ inputs.dockerRegistryUsername }}'
        password: '${{ inputs.dockerRegistryPassword }}'
        logout: true

    - name: Setup Jira credentials in tafConfig.json
      if: inputs.jiraProject != '' && inputs.jiraTestPlan != ''
      shell: bash
      run: >
        ${{ github.action_path }}/bin/set_json_values.sh
        ${{env.TAFFI_CONFIGS}}/tafConfig.json
        "jira.credentials.username:${{ inputs.jiraUsername }}"
        "jira.credentials.password:${{ inputs.jiraPassword }}"

    - name: Setup Jira reporting config in TAFFi run config
      if: inputs.jiraProject != '' && inputs.jiraTestPlan != ''
      shell: bash
      run: >
        ${{ github.action_path }}/bin/set_json_values.sh
        ${{env.TAFFI_CONFIGS}}/runConfig.json
        "runConfig.jiraProject:${{ inputs.jiraProject }}"
        "runConfig.testPlan:${{ inputs.jiraTestPlan }}"

    - name: Setup TAFFi server, client and run config in TAFFi run configs
      shell: bash
      run: >
        ${{ github.action_path }}/bin/set_json_values.sh
        ${{env.TAFFI_CONFIGS}}/runConfig.json
        "serverConfig.testDir:${GITHUB_WORKSPACE}/${{ inputs.testDir }}"
        "serverConfig.configDir:${{env.TAFFI_CONFIGS}}"
        "serverConfig.resultsDir:${GITHUB_WORKSPACE}/${{ inputs.resultsDir }}"
        "cliConfig.configDir:${{env.TAFFI_CONFIGS}}"
        "runConfig.runs.0.tool:${{ inputs.testRunTool }}"
        "runConfig.runs.0.options:__array__${{ inputs.testRunOptions }}"
        "runConfig.runs.0.tests:__array__${{ inputs.testRunTests }}"
        "runConfig.runs.0.configPath:/taffi/tests/${{ inputs.testRunConfigPath }}"
        "runConfig.runs.0.baseDir:/taffi/tests/${{ inputs.testRunBaseDir }}"

    - name: Check taffiCmd input
      shell: bash
      run: echo "TAFFi cmd: \"${{ inputs.taffiCmd }}\""

    - name: Setup cmd for TAFFi server container in TAFFi run config
      if: ${{ inputs.taffiCmd != '' }}
      shell: bash
      run: >
        ${{ github.action_path }}/bin/set_json_values.sh
        ${{env.TAFFI_CONFIGS}}/runConfig.json
        "serverConfig.cmd:__array__bash -c \"${{ inputs.taffiCmd }} && cd /taffi && npm start --prefix server\""

    - name: Setup Docker client config
      shell: bash
      run: >
        ${{ github.action_path }}/bin/set_json_values.sh
        ~/.docker/config.json
        "proxies.default.noProxy:${NO_PROXY}"

    - name: Check run config
      shell: bash
      run: |
        cat "${{env.TAFFI_CONFIGS}}/runConfig.json"

    - name: Run Robot tests with TAFFi
      if: ${{ inputs.realRun == 'true' }}
      shell: bash
      run: |
        ${{ github.action_path }}/bin/run_tests.sh -o -s "${{env.TAFFI_CONFIGS}}/runConfig.json"

    - name: Archive Robot output
      if: ${{ inputs.realRun == 'true' && always() }}
      uses: actions/upload-artifact@v3
      with:
        name: robot-output
        path: '${{ github.workspace }}/${{ inputs.resultsDir }}/**'
